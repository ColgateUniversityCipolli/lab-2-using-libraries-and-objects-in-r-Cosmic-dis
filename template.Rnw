\documentclass{article}
\usepackage{amsmath} %This allows me to use the align functionality.
                     %If you find yourself trying to replicate
                     %something you found online, ensure you're
                     %loading the necessary packages!
\usepackage{amsfonts}%Math font
\usepackage{graphicx}%For including graphics
\usepackage{hyperref}%For Hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\hypersetup{colorlinks = true,citecolor=black} %set citations to have black (not green) color
\usepackage{natbib}        %For the bibliography
\setlength{\bibsep}{0pt plus 0.3ex}
\bibliographystyle{apalike}%For the bibliography
\usepackage[margin=0.50in]{geometry}
\usepackage{float}
\usepackage{multicol}

%fix for figures
\usepackage{caption}
\newenvironment{Figure}
  {\par\medskip\noindent\minipage{\linewidth}}
  {\endminipage\par\medskip}
\begin{document}

\vspace{-1in}
\title{Lab XX -- MATH 240 -- Computational Statistics}

\author{
  First Author \\
  Affiliation  \\
  Department  \\
  {\tt email@domain}
}

\date{}

\maketitle

\begin{multicols}{2}
\begin{abstract}
This lab was split into two parts, one part taught me how to retrieve and process data by building a Batch file and the other part was about processing \texttt{JSON} files and working with their data. 
\end{abstract}

\noindent \textbf{Keywords:} loops; conditionals; indexing, data

\section{Introduction}

This lab was the first of a series of labs that aim to answer an important question. This question is, who of the three bands, The Front Bottoms, Manchester Orchestra, and All Get Out, contributed the most to a famous song called "Allen Town" in which they all collaborated on. The focus of this lab was to get comfortable processing and evaluating data.


\section{Methods}
The lab began by requiring us to build a Batch file for data processing. I was given fake music data to work with, but I needed functions that would allow me to manipulate the titles of the files and directories in a way that allowed me to better organize the data for evaluation later on. Specifically, I needed an R package that would allow me to manipulate strings (directory names, file names, etc.) easily. I used the \texttt{stringr} package to gain access to the functions \texttt{str\_sub()}, \texttt{str\_count()} and \texttt{str\_split()} which allowed me to work with the directory and file names to create the Batch file. \\

\noindent Later on, I had to  work with a \texttt{JSON} file, which required me to download a package, \texttt{jsonlite}, that would allow me to read the data in the \texttt{JSON} file. This package gave me access to the \texttt{fromJSON()} function which I used to load the \texttt{JSON} file into my \texttt{R} script and then read the data within the file. 


\subsection{Methods Subsection}
In collecting the data from the fake music file, I had to utilize for loops and conditional statements to specify what files I wanted to extract and what directories I wanted to look through. 

\section{Results}

For the first part of the lab, I utilized the \texttt{stringr} functions, for loops, and conditional statements to isolate the band name, album name, and track name from the files in the fake music folder. Each file in the fake music folder consisted of sub-folders named after fake artists, and the WAV files within these sub-folders were named using fake album and track names. I had to extract the individual names of the band, album, and track and paste them into a vector according to this template: \texttt{streaming\_extractor\_music.exe / track\_file / output\_filename\_with\_the\_combined\_artist\_album\_track\_names}. Each iteration of the for loop would repeat this process of pasting this template into a vector called code.to.process and then I finished by using the \texttt{writeLines()} function to write all the vector values into a batch file called batfile.txt.\\

\noindent The second part of the lab was split into two tasks. First, I had to do what I had previously done and split the \texttt{JSON} file name into components consisting of the artist, album, and track names using a for loop and a conditional statement. Second, I needed to utilize \texttt{fromJSON} to read through the contents of the \texttt{JSON} file and pull out specific metrics. These metrics included the \texttt{avergae\_loundness}, \texttt{mean of spectral\_energy}, \texttt{danceability},\texttt{bpm}, \texttt{key\_key}, \texttt{key\_scale}, and \texttt{length}.


\section{Discussion}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Bibliography
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\vspace{2em}

\noindent\textbf{Bibliography:} Note that when you add citations to your bib.bib file \emph{and}
you cite them in your document, the bibliography section will automatically populate here.

\begin{tiny}
\bibliography{bib}
\end{tiny}
\end{multicols}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Appendix
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\onecolumn
\section{Appendix}


\end{document}